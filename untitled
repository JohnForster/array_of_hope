Array List
``````````
Key: _zero-arguments *zero-or-one-argument ^one-argument >test \stretch-goals

_join() 	Joins all elements of an array into a string
_pop() 	Removes the last element of an array, and returns that element
_toString() 	Converts an array to a string, and returns the result
_sort() 	Sorts the elements of an array
_reverse() 	Reverses the order of the elements in an array
_shift() 	Removes the first element of an array, and returns that element

*slice() 	Selects a part of an array, and returns the new array

^concat() 	Joins two or more arrays, and returns a copy of the joined arrays
^fill() 	Fill the elements in an array with a static value
^indexOf() 	Search the array for an element and returns its position
^lastIndexOf() 	Search the array for an element, starting at the end, and returns its position
^push() 	Adds new elements to the end of an array, and returns the new length
^unshift() 	Adds new elements to the beginning of an array, and returns the new length

>every() 	Checks if every element in an array pass a test
>filter() 	Creates a new array with every element in an array that pass a test
>find() 	Returns the value of the first element in an array that pass a test
>findIndex() 	Returns the index of the first element in an array that pass a test
>some() 	Checks if any of the elements in an array pass a test

\map() 	Creates a new array with the result of calling a function for each array element
\splice() 	Adds/Removes elements from an array


copyWithin() 	Copies array elements within the array, to and from specified positions
entries() 	Returns a key/value pair Array Iteration Object
forEach() 	Calls a function for each array element
from() 	Creates an array from an object
includes() 	Check if an array contains the specified element
isArray() 	Checks whether an object is an array
keys() 	Returns a Array Iteration Object, containing the keys of the original array
reduce() 	Reduce the values of an array to a single value (going left-to-right)
reduceRight() 	Reduce the values of an array to a single value (going right-to-left)
valueOf()   Returns the primitive value of an array
